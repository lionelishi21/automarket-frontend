{"remainingRequest":"/Users/lionelfrancis/development/frontend/carmarket/node_modules/babel-loader/lib/index.js!/Users/lionelfrancis/development/frontend/carmarket/src/store/modules/plan.js","dependencies":[{"path":"/Users/lionelfrancis/development/frontend/carmarket/src/store/modules/plan.js","mtime":1586626045706},{"path":"/Users/lionelfrancis/development/frontend/carmarket/node_modules/cache-loader/dist/cjs.js","mtime":1583532514267},{"path":"/Users/lionelfrancis/development/frontend/carmarket/node_modules/babel-loader/lib/index.js","mtime":1583532513681}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBhcGkgZnJvbSAiLi4vLi4vYXBpL3NlcnZpY2VzL3BsYW4tc2VydmljZXMuanMiOwp2YXIgc3RhdGUgPSB7CiAgcGxhbjogbnVsbCwKICBwbGFuczogW10sCiAgYWN0aXZlX3BsYW5zOiBbXSwKICBkZXRhaWxzOiBbXQp9Owp2YXIgZ2V0dGVycyA9IHsKICBnZXRVc2VyUGxhbjogZnVuY3Rpb24gZ2V0VXNlclBsYW4oc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5wbGFuOwogIH0sCiAgZ2V0UGxhbnM6IGZ1bmN0aW9uIGdldFBsYW5zKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUucGxhbnM7CiAgfSwKICBnZXRQbGFuRGV0YWlsczogZnVuY3Rpb24gZ2V0UGxhbkRldGFpbHMoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5kZXRhaWxzOwogIH0sCiAgZ2V0QWN0aXZlUGxhbnM6IGZ1bmN0aW9uIGdldEFjdGl2ZVBsYW5zKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUuYWN0aXZlX3BsYW5zOwogIH0KfTsKdmFyIGFjdGlvbnMgPSB7CiAgLyoqCiAgICogKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgogICAqIEdldCBhbGwgdXNlciBwbGFucwogICAqIEBwYXJhbSB7W3R5cGVdfSBvcHRpb25zLmNvbW1pdCAgIFtkZXNjcmlwdGlvbl0KICAgKiBAcGFyYW0ge1t0eXBlXX0gb3B0aW9ucy5kaXNwYXRjaCBbZGVzY3JpcHRpb25dCiAgICogKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgogICAqLwogIEdFVF9BTExfUExBTlM6IGZ1bmN0aW9uIEdFVF9BTExfUExBTlMoX3JlZikgewogICAgdmFyIGNvbW1pdCA9IF9yZWYuY29tbWl0LAogICAgICAgIGRpc3BhdGNoID0gX3JlZi5kaXNwYXRjaDsKICAgIHZhciB0b2tlbiA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdhY2Nlc3NfdG9rZW4nKTsKICAgIGF4aW9zLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uWydBdXRob3JpemF0aW9uJ10gPSAnQmVhcmVyICcgKyB0b2tlbjsKICAgIGFwaS5mZXRjaFBsYW5zKCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgY29tbWl0KCdTRVRfUExBTicsIHJlc3BvbnNlLmRhdGEpOwogICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgIGNvbnNvbGUubG9nKGVycm9yLnJlc3BvbnNlKTsKICAgIH0pOwogIH0sCgogIC8qKgogICAqICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgogICAqIFRoaXMgZnVuY3Rpb24gZ2V0IHVzZXIgYWN0aXZlIHBsYW4KICAgKiBAcGFyYW0ge1t0eXBlXX0gb3B0aW9ucy5jb21taXQgW2Rlc2NyaXB0aW9uXQogICAqICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgogICAqLwogIEZFVENIX1VTRVJfQUNUSVZFX1BMQU5TOiBmdW5jdGlvbiBGRVRDSF9VU0VSX0FDVElWRV9QTEFOUyhfcmVmMikgewogICAgdmFyIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgIHZhciB0b2tlbiA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdhY2Nlc3NfdG9rZW4nKTsKICAgIGF4aW9zLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uWydBdXRob3JpemF0aW9uJ10gPSAnQmVhcmVyICcgKyB0b2tlbjsKICAgIGFwaS5mZXRjaFVzZXJBY3RpdmVQbGFuKCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpOwogICAgICBjb21taXQoJ1NFVF9VU0VSX0FDVElWRV9QTEFOJywgcmVzcG9uc2UuZGF0YVswXSk7CiAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgY29uc29sZS5sb2coZXJyb3IucmVzcG9uc2UpOwogICAgfSk7CiAgfSwKCiAgLyoqCiAgICogKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKICAgKiB0aGlzIGZ1bmN0aW8gZ2V0IHVzZSBwbGFuCiAgICogQHBhcmFtIHtbdHlwZV19IG9wdGlvbnMuY29tbWl0ICAgW2Rlc2NyaXB0aW9uXQogICAqIEBwYXJhbSB7W3R5cGVdfSBvcHRpb25zLmRpc3BhdGNoIFtkZXNjcmlwdGlvbl0KICAgKiAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKICAgKi8KICBVU0VSX1BMQU46IGZ1bmN0aW9uIFVTRVJfUExBTihfcmVmMykgewogICAgdmFyIGNvbW1pdCA9IF9yZWYzLmNvbW1pdCwKICAgICAgICBkaXNwYXRjaCA9IF9yZWYzLmRpc3BhdGNoOwogICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgYXBpLmZldGNoVXNlclBsYW4oKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIHZhciByZXNwb25zZURhdGEgPSByZXNwb25zZS5kYXRhOwogICAgICAgIGNvbW1pdCgnU0VUX1VTRVJfUExBTicsIHJlc3BvbnNlRGF0YSk7CiAgICAgICAgcmVzb2x2ZShyZXNwb25zZSk7CiAgICAgIH0sIGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIHJlamVjdChlcnJvcik7CiAgICAgIH0pOwogICAgfSk7CiAgfSwKCiAgLyoqCiAgICogKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgogICAqIHRoaXMgZnVuY3Rpb24gc2VsZWN0IHVzZXIgcGxhbgogICAqIEBwYXJhbSB7W3R5cGVdfSBvcHRpb25zLmNvbW1pdCAgIFtkZXNjcmlwdGlvbl0KICAgKiBAcGFyYW0ge1t0eXBlXX0gb3B0aW9ucy5kaXNwYXRjaCBbZGVzY3JpcHRpb25dCiAgICogQHBhcmFtIHtbdHlwZV19IHBsYW5faWQgICAgICAgICAgW2Rlc2NyaXB0aW9uXQogICAqICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKICAgKi8KICBTRUxFQ1RfVVNFUl9QTEFOOiBmdW5jdGlvbiBTRUxFQ1RfVVNFUl9QTEFOKF9yZWY0LCBwbGFuX2lkKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjQuY29tbWl0LAogICAgICAgIGRpc3BhdGNoID0gX3JlZjQuZGlzcGF0Y2g7CiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICBhcGkuc2VsZWN0VXNlclBsYW4ocGxhbl9pZCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICB2YXIgcmVzcG9uc2VEYXRhID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICBjb21taXQoJ1NFVF9VU0VSX1BMQU4nLCByZXNwb25zZURhdGEpOwogICAgICAgIHJlc29sdmUocmVzcG9uc2UpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgcmVqZWN0KGVycik7CiAgICAgIH0pOwogICAgfSk7CiAgfSwKCiAgLyoqCiAgICogKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCiAgICogVGhpcyBmdW5jdGlvbiBnZXQgcGxhbiBkZXRhaWxzCiAgICogQHBhcmFtIHtbdHlwZV19IG9wdGlvbnMuY29tbWl0ICAgW2Rlc2NyaXB0aW9uXQogICAqIEBwYXJhbSB7W3R5cGVdfSBvcHRpb25zLmRpc3BhdGNoIFtkZXNjcmlwdGlvbl0KICAgKiBAcGFyYW0ge1t0eXBlXX0gc2x1ZyAgICAgICAgICAgICBbZGVzY3JpcHRpb25dCiAgICogKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCiAgICovCiAgUExBTl9ERVRBSUxTOiBmdW5jdGlvbiBQTEFOX0RFVEFJTFMoX3JlZjUsIHNsdWcpIHsKICAgIHZhciBjb21taXQgPSBfcmVmNS5jb21taXQsCiAgICAgICAgZGlzcGF0Y2ggPSBfcmVmNS5kaXNwYXRjaDsKICAgIGFwaS5mZXRjaFBsYW5EZXRhaWxzKHNsdWcpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIHZhciByZXNwb25zZURhdGEgPSByZXNwb25zZS5kYXRhOwogICAgICBjb21taXQoJ1NFVF9QTEFOX0RFVEFJTFMnLCByZXNwb25zZURhdGEpOwogICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgIGNvbnNvbGUubG9nKGVycm9yLnJlc3BvbnNlKTsKICAgIH0pOwogIH0KfTsKdmFyIG11dGF0aW9ucyA9IHsKICBTRVRfVVNFUl9QTEFOOiBmdW5jdGlvbiBTRVRfVVNFUl9QTEFOKHN0YXRlLCBwbGFuKSB7CiAgICBzdGF0ZS5wbGFuID0gcGxhbjsKICB9LAogIFNFVF9QTEFOOiBmdW5jdGlvbiBTRVRfUExBTihzdGF0ZSwgcGwpIHsKICAgIGNvbnNvbGUubG9nKHBsKTsKICAgIHN0YXRlLnBsYW5zID0gcGw7CiAgfSwKICBTRVRfUExBTl9ERVRBSUxTOiBmdW5jdGlvbiBTRVRfUExBTl9ERVRBSUxTKHN0YXRlLCBkZXRhaWwpIHsKICAgIGNvbnNvbGUubG9nKGRldGFpbCk7CiAgICBzdGF0ZS5kZXRhaWxzID0gZGV0YWlsOwogIH0sCiAgU0VUX1VTRVJfQUNUSVZFX1BMQU46IGZ1bmN0aW9uIFNFVF9VU0VSX0FDVElWRV9QTEFOKHN0YXRlLCBwbGFuKSB7CiAgICBjb25zb2xlLmxvZyhwbGFuKTsKICAgIHN0YXRlLmFjdGl2ZV9wbGFucyA9IHBsYW47CiAgfQp9OwpleHBvcnQgZGVmYXVsdCB7CiAgc3RhdGU6IHN0YXRlLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgZ2V0dGVyczogZ2V0dGVycywKICBtdXRhdGlvbnM6IG11dGF0aW9ucwp9Ow=="},{"version":3,"sources":["/Users/lionelfrancis/development/frontend/carmarket/src/store/modules/plan.js"],"names":["axios","api","state","plan","plans","active_plans","details","getters","getUserPlan","getPlans","getPlanDetails","getActivePlans","actions","GET_ALL_PLANS","commit","dispatch","token","localStorage","getItem","defaults","headers","common","fetchPlans","then","response","data","error","console","log","FETCH_USER_ACTIVE_PLANS","fetchUserActivePlan","USER_PLAN","Promise","resolve","reject","fetchUserPlan","responseData","SELECT_USER_PLAN","plan_id","selectUserPlan","catch","err","PLAN_DETAILS","slug","fetchPlanDetails","mutations","SET_USER_PLAN","SET_PLAN","pl","SET_PLAN_DETAILS","detail","SET_USER_ACTIVE_PLAN"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport api from '../../api/services/plan-services.js';\n\n\nconst state = {\n\tplan: null,\n\tplans: [],\n\tactive_plans: [],\n\tdetails: []\n}\n\nconst getters = {\n\n\tgetUserPlan(state) {\n\t\treturn state.plan\n\t},\n\tgetPlans(state) {\n\t\treturn state.plans\n\t},\n\tgetPlanDetails( state ) {\n\t\treturn state.details\n\t},\n\tgetActivePlans( state ) {\n\t\treturn state.active_plans\n\t}\n\t\n}\n\nconst actions = {\n\n\t/**\n\t * **********************************************\n\t * Get all user plans\n\t * @param {[type]} options.commit   [description]\n\t * @param {[type]} options.dispatch [description]\n\t * **********************************************\n\t */\n\tGET_ALL_PLANS({commit, dispatch}) {\n\n\t\tlet token = localStorage.getItem('access_token')\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n\t\t\n\t\tapi.fetchPlans().then( response => {\n\t\t\tcommit('SET_PLAN', response.data)\n\t\t}, error => {\n\t\t\tconsole.log(error.response)\n\t\t});\n\n\t},\n\n\t/**\n\t * ************************************************\n\t * This function get user active plan\n\t * @param {[type]} options.commit [description]\n\t * ************************************************\n\t */\n\tFETCH_USER_ACTIVE_PLANS({commit}) {\n\n\t\tlet token = localStorage.getItem('access_token')\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n\n\t\tapi.fetchUserActivePlan().then( response => {\n\t\t\t\tconsole.log(response)\n\t\t\t\tcommit('SET_USER_ACTIVE_PLAN', response.data[0])\n\t\t}, error => {\n\t\t\t\tconsole.log(error.response)\n\t\t})\n\n\t},\n\n\t/**\n\t * ***********************************************\n\t * this functio get use plan\n\t * @param {[type]} options.commit   [description]\n\t * @param {[type]} options.dispatch [description]\n\t * ************************************************\n\t */\n\tUSER_PLAN({commit, dispatch}){\n\n\t\t return new Promise((resolve, reject) => {\n\t  \t\t\n\t  \t\tapi.fetchUserPlan().then( response => {\n\t\t\t\t\n\t\t\t\tlet responseData = response.data\n\t\t\t\tcommit('SET_USER_PLAN', responseData)\n\t\t\t\tresolve(response)\n\t\t\t\n\t\t\t}, error => {\n\t\t\t\treject(error)\n\t\t\t})\n\t      });\n\t},\n\n\t/**\n\t * *************************************************\n\t * this function select user plan\n\t * @param {[type]} options.commit   [description]\n\t * @param {[type]} options.dispatch [description]\n\t * @param {[type]} plan_id          [description]\n\t * *************************************************\n\t */\n\tSELECT_USER_PLAN({ commit, dispatch}, plan_id) {\n\n\t\t  return new Promise((resolve, reject) => {\n\t  \t\tapi.selectUserPlan(plan_id).then( response => {\n\t\t\t\t\n\t\t\t\tlet responseData = response.data\n\t\t\t\tcommit('SET_USER_PLAN', responseData)\n\t\t\t\t\n\t\t\t\tresolve(response)\n\t\t\t}).catch( err => { \n\t\t\t\treject(err)\n\t\t\t})\n\t\t})\n\t\n\t},\n\n\t/**\n\t * ************************************************\n\t * This function get plan details\n\t * @param {[type]} options.commit   [description]\n\t * @param {[type]} options.dispatch [description]\n\t * @param {[type]} slug             [description]\n\t * ************************************************\n\t */\n\tPLAN_DETAILS ({ commit, dispatch}, slug ) {\n\n\t\t api.fetchPlanDetails(slug).then( response => {\n\t\t\tlet responseData = response.data\n\t\t\tcommit('SET_PLAN_DETAILS', responseData)\n\t\t }, error => {\n\t\t\tconsole.log(error.response)\n\t\t })\n\n\t}\n}\n\nconst mutations = {\n\tSET_USER_PLAN(state, plan) {\n\t\tstate.plan = plan\n\t},\n\tSET_PLAN(state, pl) {\n\t\tconsole.log(pl)\n\t\tstate.plans = pl\n\t},\n\tSET_PLAN_DETAILS(state, detail) {\n\t\tconsole.log(detail)\n\t\tstate.details = detail\n\t}, \n\tSET_USER_ACTIVE_PLAN(state, plan) {\n\t\tconsole.log(plan)\n\t\tstate.active_plans = plan\n\t}\n}\n\n\nexport default {\n\tstate,\n\tactions,\n\tgetters,\n\tmutations\n}"]}]}