{"remainingRequest":"/Users/lionelfrancis/development/frontend/carmarket/node_modules/thread-loader/dist/cjs.js!/Users/lionelfrancis/development/frontend/carmarket/node_modules/babel-loader/lib/index.js!/Users/lionelfrancis/development/frontend/carmarket/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lionelfrancis/development/frontend/carmarket/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lionelfrancis/development/frontend/carmarket/node_modules/vue-upload-image/dist/upload_image.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lionelfrancis/development/frontend/carmarket/node_modules/vue-upload-image/dist/upload_image.vue","mtime":1583532519390},{"path":"/Users/lionelfrancis/development/frontend/carmarket/node_modules/cache-loader/dist/cjs.js","mtime":1583532514267},{"path":"/Users/lionelfrancis/development/frontend/carmarket/node_modules/thread-loader/dist/cjs.js","mtime":1583532518856},{"path":"/Users/lionelfrancis/development/frontend/carmarket/node_modules/babel-loader/lib/index.js","mtime":1583532513681},{"path":"/Users/lionelfrancis/development/frontend/carmarket/node_modules/cache-loader/dist/cjs.js","mtime":1583532514267},{"path":"/Users/lionelfrancis/development/frontend/carmarket/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["upload_image.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"vue_component__upload--image\" v-bind:class=\"{ 'dragover': onDragover }\">\n        <form v-bind:id=\"'upload_image_form--' + input_id\" enctype=\"multipart/form-data\">\n            <div class=\"upload_image_form__thumbnails\">\n                <div v-for=\"(value, key) in files\" class=\"upload_image_form__thumbnail\"\n                     v-on:click=\"fileClick($event, key)\"\n                     v-bind:class=\"{ 'uploaded': value.uploaded, 'bad-size': value.bad_size }\">\n                    <span v-on:click=\"fileDelete($event, key)\">\n                    &#x2716;\n                    </span>\n                    <img v-bind:src=\"image[key]\" v-bind:class=\"{ 'show': image[key]}\">\n                </div>\n            </div>\n            <input type=\"file\" v-bind:id=\"'upload_image_form__input--' + input_id\" hidden multiple/>\n            <div>\n                <button type=\"submit\"\n                        v-bind:class=\"button_class\"\n                        v-on:click=\"submit\"\n                        v-bind:disabled=\"onUploading\"\n                        v-html=\"button_html\"></button>\n            </div>\n        </form>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'upload-image',\n        props: {\n            input_id: {\n                type: String,\n                required: false,\n                default: \"default\"\n            },\n            url: {\n                type: String,\n                required: true,\n                default: null\n            },\n            name: {\n                type: String,\n                required: false,\n                default: 'images[]'\n            },\n            disable_upload: {\n                type: Boolean,\n                required: false,\n                default: false\n            },\n            max_batch: {\n                type: Number,\n                required: false,\n                default: 0\n            },\n            max_files: {\n                type: Number,\n                required: false,\n                default: 10\n            },\n            max_filesize: {\n                type: Number,\n                required: false,\n                default: 8000\n            },\n            resize_enabled: {\n                type: Boolean,\n                required: false,\n                default: false\n            },\n            resize_max_width: {\n                type: Number,\n                required: false,\n                default: 800\n            },\n            resize_max_height: {\n                type: Number,\n                required: false,\n                default: 600\n            },\n            button_html: {\n                type: String,\n                required: false,\n                default: 'Upload Images'\n            },\n            button_class: {\n                type: String,\n                required: false,\n                default: 'btn btn-primary'\n            }\n        },\n        data: function () {\n            return {\n                form: null,\n                input: null,\n                index: 0,\n                total: 0,\n                files: {},\n                image: {},\n                batch: {},\n                onDragover: false,\n                onUploading: false\n            }\n        },\n        mounted: function () {\n            this.form = document.getElementById('upload_image_form--' + this.input_id);\n            this.input = document.getElementById('upload_image_form__input--' + this.input_id);\n\n            ['drag', 'dragstart', 'dragend',\n                'dragover', 'dragenter', 'dragleave', 'drop'].forEach(event => this.form.addEventListener(event, (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n            }));\n\n            ['dragover', 'dragenter']\n                .forEach(event => this.form.addEventListener(event, this.dragEnter));\n\n            ['dragleave', 'dragend', 'drop']\n                .forEach(event => this.form.addEventListener(event, this.dragLeave));\n\n            ['drop']\n                .forEach(event => this.form.addEventListener(event, this.fileDrop));\n\n            ['change']\n                .forEach(event => this.input.addEventListener(event, this.fileDrop));\n\n            this.form.addEventListener('click', (e) => {\n                this.input.click();\n            });\n        },\n        methods: {\n            _can_xhr() {\n                if (this.total >= this.max_files) {\n                    return false;\n                }\n                return true;\n            },\n            _can_upload_file(key) {\n                let file = this.files[key];\n\n                if (file.attempted || file.bad_size) {\n                    return false;\n                }\n                return true;\n            },\n            _xhr: function (formData, keys, callback) {\n                this.onUploading = true;\n                this.$emit('upload-image-attempt', formData);\n\n                keys.forEach((key) => {\n                    this.$set(this.files[key], 'attempted', true);\n                });\n\n                this.$http.post(this.url, formData).then((response) => {\n                    keys.forEach((key) => {\n                        this.$set(this.files[key], 'uploaded', true);\n\n                        this.total++;\n                    });\n\n                    this.$emit('upload-image-success', [formData, response]);\n                }, (response) => {\n                    this.$emit('upload-image-failure', [formData, response]);\n                }).then((response) => {\n                    this.onUploading = false;\n\n                    callback();\n                });\n            },\n            upload: function () {\n                if (!this._can_xhr()) return false;\n\n                for (let key in this.files) {\n                    if (!this._can_upload_file(key)) continue;\n\n                    let formData = new FormData();\n                    formData.append(this.name, this.files[key].file, this.files[key].name);\n\n                    this._xhr(formData, [key], this.upload);\n\n                    return true;\n                }\n            },\n            upload_batch: function () {\n                if (!this._can_xhr()) return false;\n\n                for (let key in this.batch) {\n                    this._xhr(this.batch[key].form, this.batch[key].keys, this.upload_batch);\n\n                    delete this.batch[key];\n\n                    return true;\n                }\n            },\n            create_batch: function () {\n                let index = 0;\n                let count = 0;\n\n                this.batch = {};\n\n                for (let key in this.files) {\n                    if (!this._can_upload_file(key)) continue;\n\n                    if (this.batch[index] == null || count == this.max_batch) {\n                        index++;\n                        count = 0;\n                        this.batch[index] = {form: new FormData(), keys: []};\n                    }\n\n                    count++;\n                    this.batch[index]['keys'].push(key);\n                    this.batch[index]['form'].append(this.name, this.files[key].file, this.files[key].name);\n                }\n            },\n            submit: function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                this.$emit('upload-image-submit', this.files);\n\n                if(!this.disable_upload && !this.onUploading) {\n                    if (this.max_batch > 1) {\n                        this.create_batch();\n                        return this.upload_batch();\n                    }\n                    this.upload();\n                }\n            },\n            dragEnter: function (e) {\n                e.preventDefault();\n                this.onDragover = true;\n            },\n            dragLeave: function (e) {\n                e.preventDefault();\n                this.onDragover = false;\n            },\n            fileDrop: function (e) {\n                e.preventDefault();\n\n                let newFiles = e.target.files || e.dataTransfer.files;\n\n                for (let i = 0; i < newFiles.length; i++) {\n                    this.$set(this.files, this.index, newFiles[i]);\n\n                    if (newFiles[i].type.match(/image.*/)) {\n                        this.fileInit(this.index);\n                        this.fileRead(this.index);\n\n                        this.index++;\n                    }\n                    ;\n                }\n                e.target.value = '';\n            },\n            fileInit: function (key) {\n                let file = this.files[key];\n\n                this.files[key] = {\n                    name: this.files[key].name,\n                    file: this.files[key]\n                };\n\n                if ((file.size * 0.001) > this.max_filesize) {\n                    this.$set(this.files[key], 'bad_size', true);\n                }\n            },\n            fileRead: function (key) {\n                let reader = new FileReader();\n\n                reader.addEventListener(\"load\", (e) => {\n                    this.$set(this.image, key, reader.result);\n\n                    if (this.resize_enabled) {\n                        let imager = new Image();\n\n                        imager.onload = () => {\n                            let width = imager.width;\n                            let height = imager.height;\n\n                            if (width > this.resize_max_width || height > this.resize_max_height) {\n                                if ((height / width) - (this.resize_max_height / this.resize_max_width) > 0) {\n                                    width = this.resize_max_height / height * width;\n                                    height = this.resize_max_height;\n                                } else {\n                                    height = this.resize_max_width / width * height;\n                                    width = this.resize_max_width;\n                                }\n                            }\n\n                            let canvas = document.createElement(\"canvas\");\n                            canvas.width = width;\n                            canvas.height = height;\n\n                            let ctx = canvas.getContext(\"2d\");\n                            ctx.drawImage(imager, 0, 0, width, height);\n\n                            let newImageData = canvas.toDataURL(\"image/png\");\n\n                            this.$set(this.image, key, newImageData);\n\n                            //\n                            let img = atob(newImageData.split(',')[1]);\n                            let img_buffer = [];\n                            let i = 0;\n                            while (i < img.length) {\n                                img_buffer.push(img.charCodeAt(i));\n                                i++;\n                            }\n                            let u8Image = new Uint8Array(img_buffer);\n\n                            this.$set(this.files, key, {\n                                name: this.files[key].name,\n                                file: new Blob([u8Image], {filename: this.files[key].name})\n                            });\n\n                            this.$emit('upload-image-loaded', this.files[key]);\n                        };\n                        imager.src = reader.result;\n                    }\n                });\n\n                reader.readAsDataURL(this.files[key].file);\n            },\n            fileDelete: function (e, key) {\n                this.$emit('upload-image-removed', this.files[key]);\n                this.$delete(this.files, key);\n                this.$delete(this.image, key);\n            },\n            fileClick: function (e, key) {\n                e.preventDefault();\n                e.stopPropagation();\n                this.$emit('upload-image-clicked', this.files[key]);\n            }\n        }\n    }\n</script>\n\n<style lang=\"css\" scoped>\n    .vue_component__upload--image {\n        padding: 5px;\n        cursor: pointer;\n        min-height: 80px;\n        border-radius: 5px;\n    }\n\n    .vue_component__upload--image.dragover {\n    }\n\n    .vue_component__upload--image form > div {\n        text-align: center;\n    }\n\n    .vue_component__upload--image .upload_image_form__thumbnails {\n        margin-bottom: 1em;\n    }\n\n    .vue_component__upload--image .upload_image_form__thumbnail {\n        border-radius: 2.5px;\n        position: relative;\n        width: 20%;\n        padding: 20% 0 0;\n        overflow: hidden;\n        margin: 10px;\n        display: inline-block;\n    }\n\n    .vue_component__upload--image .upload_image_form__thumbnail img {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        min-width: 100%;\n        min-height: 100%;\n        max-height: 150%;\n        opacity: 0;\n        transform: translateX(-50%) translateY(-50%);\n        transition: 1s opacity;\n    }\n\n    .vue_component__upload--image .upload_image_form__thumbnail img.show {\n        opacity: 1;\n    }\n\n    .vue_component__upload--image .upload_image_form__thumbnail img:hover {\n        filter: blur(2px);\n    }\n\n    .vue_component__upload--image .upload_image_form__thumbnail.bad-size img {\n        filter: grayscale(100%);\n    }\n\n    .vue_component__upload--image .upload_image_form__thumbnail.uploaded img {\n        opacity: 0.1;\n    }\n\n    .vue_component__upload--image .upload_image_form__thumbnail span {\n        position: absolute;\n        top: -5px;\n        left: 0px;\n        z-index: 100;\n        padding: 0px 1px;\n        border-radius: 2px;\n        background-color: grey;\n    }\n</style>\n"],"sourceRoot":"node_modules/vue-upload-image/dist"}]}