{"remainingRequest":"/Users/lionelfrancis/development/frontend/carmarket/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lionelfrancis/development/frontend/carmarket/src/components/hero/index.vue?vue&type=template&id=724f220d&","dependencies":[{"path":"/Users/lionelfrancis/development/frontend/carmarket/src/components/hero/index.vue","mtime":1588908579846},{"path":"/Users/lionelfrancis/development/frontend/carmarket/node_modules/cache-loader/dist/cjs.js","mtime":1583532514267},{"path":"/Users/lionelfrancis/development/frontend/carmarket/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/lionelfrancis/development/frontend/carmarket/node_modules/cache-loader/dist/cjs.js","mtime":1583532514267},{"path":"/Users/lionelfrancis/development/frontend/carmarket/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}