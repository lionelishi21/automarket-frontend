{"remainingRequest":"/home/lionel/dev/carmarket/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/lionel/dev/carmarket/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/lionel/dev/carmarket/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lionel/dev/carmarket/src/views/Uploader/components/stepform/step2.vue?vue&type=template&id=56f83cce&","dependencies":[{"path":"/home/lionel/dev/carmarket/src/views/Uploader/components/stepform/step2.vue","mtime":1579932076678},{"path":"/home/lionel/dev/carmarket/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lionel/dev/carmarket/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/lionel/dev/carmarket/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lionel/dev/carmarket/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}