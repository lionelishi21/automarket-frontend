{"remainingRequest":"/home/lionel/dev/carmarket/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/lionel/dev/carmarket/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/lionel/dev/carmarket/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lionel/dev/carmarket/src/views/Home/components/categories.vue?vue&type=template&id=d977f682&","dependencies":[{"path":"/home/lionel/dev/carmarket/src/views/Home/components/categories.vue","mtime":1582602948064},{"path":"/home/lionel/dev/carmarket/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lionel/dev/carmarket/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/lionel/dev/carmarket/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lionel/dev/carmarket/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}