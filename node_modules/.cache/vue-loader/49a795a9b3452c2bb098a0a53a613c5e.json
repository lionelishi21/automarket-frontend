{"remainingRequest":"/Users/lionelfrancis/development/frontend/carmarket/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lionelfrancis/development/frontend/carmarket/node_modules/vue-upload-image/dist/upload_image.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lionelfrancis/development/frontend/carmarket/node_modules/vue-upload-image/dist/upload_image.vue","mtime":1583532519390},{"path":"/Users/lionelfrancis/development/frontend/carmarket/node_modules/cache-loader/dist/cjs.js","mtime":1583532514267},{"path":"/Users/lionelfrancis/development/frontend/carmarket/node_modules/thread-loader/dist/cjs.js","mtime":1583532518856},{"path":"/Users/lionelfrancis/development/frontend/carmarket/node_modules/babel-loader/lib/index.js","mtime":1583532513681},{"path":"/Users/lionelfrancis/development/frontend/carmarket/node_modules/cache-loader/dist/cjs.js","mtime":1583532514267},{"path":"/Users/lionelfrancis/development/frontend/carmarket/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["upload_image.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"upload_image.vue","sourceRoot":"node_modules/vue-upload-image/dist","sourcesContent":["<template>\n    <div class=\"vue_component__upload--image\" v-bind:class=\"{ 'dragover': onDragover }\">\n        <form v-bind:id=\"'upload_image_form--' + input_id\" enctype=\"multipart/form-data\">\n            <div class=\"upload_image_form__thumbnails\">\n                <div v-for=\"(value, key) in files\" class=\"upload_image_form__thumbnail\"\n                     v-on:click=\"fileClick($event, key)\"\n                     v-bind:class=\"{ 'uploaded': value.uploaded, 'bad-size': value.bad_size }\">\n                    <span v-on:click=\"fileDelete($event, key)\">\n                    &#x2716;\n                    </span>\n                    <img v-bind:src=\"image[key]\" v-bind:class=\"{ 'show': image[key]}\">\n                </div>\n            </div>\n            <input type=\"file\" v-bind:id=\"'upload_image_form__input--' + input_id\" hidden multiple/>\n            <div>\n                <button type=\"submit\"\n                        v-bind:class=\"button_class\"\n                        v-on:click=\"submit\"\n                        v-bind:disabled=\"onUploading\"\n                        v-html=\"button_html\"></button>\n            </div>\n        </form>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'upload-image',\n        props: {\n            input_id: {\n                type: String,\n                required: false,\n                default: \"default\"\n            },\n            url: {\n                type: String,\n                required: true,\n                default: null\n            },\n            name: {\n                type: String,\n                required: false,\n                default: 'images[]'\n            },\n            disable_upload: {\n                type: Boolean,\n                required: false,\n                default: false\n            },\n            max_batch: {\n                type: Number,\n                required: false,\n                default: 0\n            },\n            max_files: {\n                type: Number,\n                required: false,\n                default: 10\n            },\n            max_filesize: {\n                type: Number,\n                required: false,\n                default: 8000\n            },\n            resize_enabled: {\n                type: Boolean,\n                required: false,\n                default: false\n            },\n            resize_max_width: {\n                type: Number,\n                required: false,\n                default: 800\n            },\n            resize_max_height: {\n                type: Number,\n                required: false,\n                default: 600\n            },\n            button_html: {\n                type: String,\n                required: false,\n                default: 'Upload Images'\n            },\n            button_class: {\n                type: String,\n                required: false,\n                default: 'btn btn-primary'\n            }\n        },\n        data: function () {\n            return {\n                form: null,\n                input: null,\n                index: 0,\n                total: 0,\n                files: {},\n                image: {},\n                batch: {},\n                onDragover: false,\n                onUploading: false\n            }\n        },\n        mounted: function () {\n            this.form = document.getElementById('upload_image_form--' + this.input_id);\n            this.input = document.getElementById('upload_image_form__input--' + this.input_id);\n\n            ['drag', 'dragstart', 'dragend',\n                'dragover', 'dragenter', 'dragleave', 'drop'].forEach(event => this.form.addEventListener(event, (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n            }));\n\n            ['dragover', 'dragenter']\n                .forEach(event => this.form.addEventListener(event, this.dragEnter));\n\n            ['dragleave', 'dragend', 'drop']\n                .forEach(event => this.form.addEventListener(event, this.dragLeave));\n\n            ['drop']\n                .forEach(event => this.form.addEventListener(event, this.fileDrop));\n\n            ['change']\n                .forEach(event => this.input.addEventListener(event, this.fileDrop));\n\n            this.form.addEventListener('click', (e) => {\n                this.input.click();\n            });\n        },\n        methods: {\n            _can_xhr() {\n                if (this.total >= this.max_files) {\n                    return false;\n                }\n                return true;\n            },\n            _can_upload_file(key) {\n                let file = this.files[key];\n\n                if (file.attempted || file.bad_size) {\n                    return false;\n                }\n                return true;\n            },\n            _xhr: function (formData, keys, callback) {\n                this.onUploading = true;\n                this.$emit('upload-image-attempt', formData);\n\n                keys.forEach((key) => {\n                    this.$set(this.files[key], 'attempted', true);\n                });\n\n                this.$http.post(this.url, formData).then((response) => {\n                    keys.forEach((key) => {\n                        this.$set(this.files[key], 'uploaded', true);\n\n                        this.total++;\n                    });\n\n                    this.$emit('upload-image-success', [formData, response]);\n                }, (response) => {\n                    this.$emit('upload-image-failure', [formData, response]);\n                }).then((response) => {\n                    this.onUploading = false;\n\n                    callback();\n                });\n            },\n            upload: function () {\n                if (!this._can_xhr()) return false;\n\n                for (let key in this.files) {\n                    if (!this._can_upload_file(key)) continue;\n\n                    let formData = new FormData();\n                    formData.append(this.name, this.files[key].file, this.files[key].name);\n\n                    this._xhr(formData, [key], this.upload);\n\n                    return true;\n                }\n            },\n            upload_batch: function () {\n                if (!this._can_xhr()) return false;\n\n                for (let key in this.batch) {\n                    this._xhr(this.batch[key].form, this.batch[key].keys, this.upload_batch);\n\n                    delete this.batch[key];\n\n                    return true;\n                }\n            },\n            create_batch: function () {\n                let index = 0;\n                let count = 0;\n\n                this.batch = {};\n\n                for (let key in this.files) {\n                    if (!this._can_upload_file(key)) continue;\n\n                    if (this.batch[index] == null || count == this.max_batch) {\n                        index++;\n                        count = 0;\n                        this.batch[index] = {form: new FormData(), keys: []};\n                    }\n\n                    count++;\n                    this.batch[index]['keys'].push(key);\n                    this.batch[index]['form'].append(this.name, this.files[key].file, this.files[key].name);\n                }\n            },\n            submit: function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                this.$emit('upload-image-submit', this.files);\n\n                if(!this.disable_upload && !this.onUploading) {\n                    if (this.max_batch > 1) {\n                        this.create_batch();\n                        return this.upload_batch();\n                    }\n                    this.upload();\n                }\n            },\n            dragEnter: function (e) {\n                e.preventDefault();\n                this.onDragover = true;\n            },\n            dragLeave: function (e) {\n                e.preventDefault();\n                this.onDragover = false;\n            },\n            fileDrop: function (e) {\n                e.preventDefault();\n\n                let newFiles = e.target.files || e.dataTransfer.files;\n\n                for (let i = 0; i < newFiles.length; i++) {\n                    this.$set(this.files, this.index, newFiles[i]);\n\n                    if (newFiles[i].type.match(/image.*/)) {\n                        this.fileInit(this.index);\n                        this.fileRead(this.index);\n\n                        this.index++;\n                    }\n                    ;\n                }\n                e.target.value = '';\n            },\n            fileInit: function (key) {\n                let file = this.files[key];\n\n                this.files[key] = {\n                    name: this.files[key].name,\n                    file: this.files[key]\n                };\n\n                if ((file.size * 0.001) > this.max_filesize) {\n                    this.$set(this.files[key], 'bad_size', true);\n                }\n            },\n            fileRead: function (key) {\n                let reader = new FileReader();\n\n                reader.addEventListener(\"load\", (e) => {\n                    this.$set(this.image, key, reader.result);\n\n                    if (this.resize_enabled) {\n                        let imager = new Image();\n\n                        imager.onload = () => {\n                            let width = imager.width;\n                            let height = imager.height;\n\n                            if (width > this.resize_max_width || height > this.resize_max_height) {\n                                if ((height / width) - (this.resize_max_height / this.resize_max_width) > 0) {\n                                    width = this.resize_max_height / height * width;\n                                    height = this.resize_max_height;\n                                } else {\n                                    height = this.resize_max_width / width * height;\n                                    width = this.resize_max_width;\n                                }\n                            }\n\n                            let canvas = document.createElement(\"canvas\");\n                            canvas.width = width;\n                            canvas.height = height;\n\n                            let ctx = canvas.getContext(\"2d\");\n                            ctx.drawImage(imager, 0, 0, width, height);\n\n                            let newImageData = canvas.toDataURL(\"image/png\");\n\n                            this.$set(this.image, key, newImageData);\n\n                            //\n                            let img = atob(newImageData.split(',')[1]);\n                            let img_buffer = [];\n                            let i = 0;\n                            while (i < img.length) {\n                                img_buffer.push(img.charCodeAt(i));\n                                i++;\n                            }\n                            let u8Image = new Uint8Array(img_buffer);\n\n                            this.$set(this.files, key, {\n                                name: this.files[key].name,\n                                file: new Blob([u8Image], {filename: this.files[key].name})\n                            });\n\n                            this.$emit('upload-image-loaded', this.files[key]);\n                        };\n                        imager.src = reader.result;\n                    }\n                });\n\n                reader.readAsDataURL(this.files[key].file);\n            },\n            fileDelete: function (e, key) {\n                this.$emit('upload-image-removed', this.files[key]);\n                this.$delete(this.files, key);\n                this.$delete(this.image, key);\n            },\n            fileClick: function (e, key) {\n                e.preventDefault();\n                e.stopPropagation();\n                this.$emit('upload-image-clicked', this.files[key]);\n            }\n        }\n    }\n</script>\n\n<style lang=\"css\" scoped>\n    .vue_component__upload--image {\n        padding: 5px;\n        cursor: pointer;\n        min-height: 80px;\n        border-radius: 5px;\n    }\n\n    .vue_component__upload--image.dragover {\n    }\n\n    .vue_component__upload--image form > div {\n        text-align: center;\n    }\n\n    .vue_component__upload--image .upload_image_form__thumbnails {\n        margin-bottom: 1em;\n    }\n\n    .vue_component__upload--image .upload_image_form__thumbnail {\n        border-radius: 2.5px;\n        position: relative;\n        width: 20%;\n        padding: 20% 0 0;\n        overflow: hidden;\n        margin: 10px;\n        display: inline-block;\n    }\n\n    .vue_component__upload--image .upload_image_form__thumbnail img {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        min-width: 100%;\n        min-height: 100%;\n        max-height: 150%;\n        opacity: 0;\n        transform: translateX(-50%) translateY(-50%);\n        transition: 1s opacity;\n    }\n\n    .vue_component__upload--image .upload_image_form__thumbnail img.show {\n        opacity: 1;\n    }\n\n    .vue_component__upload--image .upload_image_form__thumbnail img:hover {\n        filter: blur(2px);\n    }\n\n    .vue_component__upload--image .upload_image_form__thumbnail.bad-size img {\n        filter: grayscale(100%);\n    }\n\n    .vue_component__upload--image .upload_image_form__thumbnail.uploaded img {\n        opacity: 0.1;\n    }\n\n    .vue_component__upload--image .upload_image_form__thumbnail span {\n        position: absolute;\n        top: -5px;\n        left: 0px;\n        z-index: 100;\n        padding: 0px 1px;\n        border-radius: 2px;\n        background-color: grey;\n    }\n</style>\n"]}]}